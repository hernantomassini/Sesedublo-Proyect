<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>